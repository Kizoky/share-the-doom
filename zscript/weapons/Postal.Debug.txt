//A Debug weapon that can set variables for NPCs

class PostDebug : PostalWeapon
{
	Default
	{
	Weapon.Kickback 100;
	Decal "bulletchip";
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse 0;
	Weapon.AmmoGive 20;
	Weapon.AmmoType "Clip";
	Obituary "$OB_MPPISTOL";
	//+WEAPON.WIMPY_WEAPON;
	Tag "$TAG_PISTOL";
	Inventory.PickupMessage "$GOTPISTOL";
	}
	States
	{
	Ready:
		XXXX AAAA 1 A_WeaponReady;
		Goto Ready;
	Deselect:
		XXXX AAAA 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_PlaySound("weaponselect3", 7 | 4096);
		XXXX AAAA 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 0 A_Debug1();
		DEBU ABCDEFGHIJKLMNOPQRS 3;
		Goto Ready;
	AltFire:
		XXXX BCDEFGHIJ 3;
		Goto Ready;
	Spawn:
		PIST A -1;
		Stop;
	}
}

extend class PostDebug
{
	//This is basically Doom's Fist
	action void A_Debug1()
	{
		FLineTraceData lineData;
		LineTrace(angle,100,pitch,offsetz: height-12, data: LineData);
				
		if (LineData.HitType == TRACE_HitActor)
		{
			if (lineData.HitActor is 'NPCCore')
			{
				Console.Printf("-------------------------------");
				let pp = NPCCore(lineData.HitActor);
				
				if (!pp) return;
				
				string s = pp.target ? string.Format("%s", pp.target.GetClassName()) : "null";
				Console.Printf("NPC Spawn Debug: Target is '%s' ",s);
				
				if (pp.target)
				{
					string selftarget = (pp.target == pp) ? "myself" : "another actor";
					Console.Printf("NPC Spawn Debug: The target is '%s'", selftarget);
					
					string targetdead = (pp.target.bKILLED) ? "dead" : "alive";
					Console.Printf("NPC Spawn Debug: My target is '%s'", targetdead);
					
					string targetismytarget = (pp.target == pp.MyTarget) ? "equal" : "not equal";
					Console.Printf("NPC Spawn Debug: target and 'MyTarget' is '%s'", targetismytarget);
				}
				
				if (pp.MyTarget)
					Console.Printf("NPC Spawn Debug: MyTarget pointer is called '%s'", pp.MyTarget.GetClassName());
					
				if (!pp.MyTarget)
					Console.Printf("NPC Spawn Debug: MyTarget pointer is null");
				
				string sIsBusy = pp.IsBusy ? "true" : "false";
				Console.Printf("NPC Spawn Debug: IsBusy is '%s'", sIsBusy);
				
				string sATarget = pp.isAfterTarget ? "true" : "false";
				Console.Printf("NPC Spawn Debug: isAfterTarget is '%s'", sATarget);
				
				Console.Printf("NPC Spawn Debug: Hostility is '%s'", pp.Hostility);
				
				string wweapon = (pp.Hostility == "Hostile") ? pp.NPCWeapon : "no weapon";
				Console.Printf("NPC Spawn Debug: Weapon is '%s'", wweapon);
				
				Console.Printf("NPC Spawn Debug: Health is '%d' (Default: %d)", pp.health, pp.Default.Health);
				//Console.Printf("NPC Spawn Debug: pos: %d %d %d",pp.pos.x,pp.pos.y,pp.pos.z);
				Console.Printf("");
					
			}
			else
				if (LineData.HitActor.bSPECIAL == true)
					Console.Printf("SPECIAL is true");
				else
					Console.Printf("SPECIAL is false");
		}
	}
}