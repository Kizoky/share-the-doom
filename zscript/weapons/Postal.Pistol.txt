class PostPistol : PostalWeapon replaces Pistol
{
	action int PistolDMG()
	{
		int damage = 5 * random[GunShot](1, 3);
		
		return damage;
	}
	
	
	action void A_FirePostalPistol()
	{
		bool accurate;

		if (player != null)
		{
			Weapon weap = player.ReadyWeapon;
			if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
			{
				if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
					return;

				player.SetPsprite(PSP_FLASH, weap.FindState('Flash'), true);
			}
			player.mo.PlayAttacking2 ();

			accurate = !player.refire;
		}
		else
		{
			accurate = true;
		}

		A_StartSound ("weapons/pistol", CHAN_WEAPON);
		
		int damage = PistolDMG();
		
		double ang = angle;
		LineAttack(ang, PLAYERMISSILERANGE, BulletSlope(), damage, 'Hitscan', "BulletPuff");
	}
	
	Default
	{
		//$Category STD Weapons
		//$Title "Pistol"
		//$Sprite PICKA0
		Weapon.Kickback 100;
		Decal "bulletchip";
		Weapon.SelectionOrder 1900;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "Clip";
		Weapon.BobRangeX 0.7;
		Weapon.BobRangeY 0.6;
		Obituary "$PSTL_OB_PISTOL";
		//+WEAPON.WIMPY_WEAPON;
		Tag "$PSTL_WP_PISTOL";
		Inventory.PickupMessage "$PSTL_PP_PISTOL";
	}
	States
	{
	Unused:
		POX2 A 0;
	Ready:
		POXX ABCDEFGHIJKLMNOPQRSTUVWXYZ 7 A_WeaponReady;
		Loop;
	Deselect:
		PXXX ABCDEFGHIJKLMNOPQRSTUVW 1;
		TNT1 A 0 A_PostalLower();
		Loop;
	Select:
		POPS A 0 A_PostalRaise(0);
		POPS A 0 A_PlaySound("weaponselect3", 7 | 4096);
		POPS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady;
		POXX A 0 A_PostalRaise(1);
		Loop;
	Fire:
		POXA AB 1;
		//TNT1 A 0 A_QuakeEx(1, 1, 1, 7, 0, 60 | QF_RELATIVE);
		POXA C 0 A_SetPitch(pitch-0.50);
		POXA C 1 A_FirePostalPistol();
		POXA D 0 A_SetPitch(pitch+0.50);
		POXA DEFGHIJKLM 1;
		//POX2 A 0 A_ReFire;
		POXA STUVWXYZ 1;
		//POX2 ABCD 4 A_ReFire;
		
		Goto Ready;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}