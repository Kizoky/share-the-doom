class PostShotgun : PostalWeapon replaces Shotgun
{
	action int ShotgunDMG()
	{
		int damage = 5 * random[GunShot](1, 3);
		
		return damage;
	}
	
	
	action void A_FirePostalShotgun()
	{
		if (player == null)
		{
			return;
		}

		A_StartSound ("weapons/shotgf", CHAN_WEAPON);
		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
				return;
			
			player.SetPsprite(PSP_FLASH, weap.FindState('Flash'), true);
		}
		player.mo.PlayAttacking2 ();

		double pitch = BulletSlope ();

		for (int i = 0; i < 7; i++)
		{
			// Damage dealt by the Shotgun
			int damage = ShotgunDMG();
			
			double ang = angle;
			ang += Random2[GunShot]() * (5.625 / 256);
			LineAttack(ang, PLAYERMISSILERANGE, pitch, damage, 'Hitscan', "BulletPuff");
		}
	}
	
	Default
	{
		//$Category STD Weapons
		//$Title "Shotgun"
		//$Sprite PICKA0
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";
		Weapon.BobRangeX 0.7;
		Weapon.BobRangeY 0.5;
		Obituary "$PSTL_OB_SHOTGUN";
		Tag "$PSTL_WP_SHOTGUN";
		Inventory.PickupMessage "$PSTL_PP_SHOTGUN";
	}
	States
	{
	Ready:
		SHXD ABCDEFGHIJKLMNOPQRS 4 A_WeaponReady;
		Goto Ready;
	Deselect:
		SH2H ABCDEFGHIJKLMNN 1;
		SH2H N 0 A_PostalLower();
		Loop;
	Select:
		SHST A 0 A_PostalRaise(0);
		SHST A 0 A_PlaySound("weaponselect4", 7 | 4096);
		SHST ABCDEFGHIJKLMNOPQRR 2 A_WeaponReady;
		SHXD A 1 A_WeaponReady;
		SHXD A 0 A_PostalRaise(1);
		//shst
		Loop;
	Fire:
		//ABCDEFGHIJKLMNOPQR
		SHSH A 3;
		SHSH B 0 A_SetPitch(pitch-0.66);
		SHSH B 5 A_FirePostalShotgun;
		SHSH C 0 A_SetPitch(pitch+0.66);
		SHSH CD 2;
		SHSH E 0 A_PlaySound("weapons/shotgr");
		SHSH EFGH 2;
		SHSH IJKLMNOPQ 2;
		//Needed for Shell visual glitch
		SHSH QPONMLKJIHGFEDCBA 0;
		Goto Ready;
	Flash:
		//PGNS B 3 Offset(0, 0) Bright A_Light2;
		//PGNS A 2 Offset(0, 0) Bright A_Light1;
		Goto LightDone;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}