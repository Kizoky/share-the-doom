class PostSledge : PostalWeapon
{
	Default
	{
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Obituary "$OB_MPSHOTGUN";
		Inventory.PickupMessage "Picked up a sledgehammer.";
		+Weapon.NoAlert;
	}
	States
	{
	Ready:
		TNT1 A 1
		{
			cvar idlinganimcvar = cvar.findcvar('postal_idleanim');
			bool idlinganim = (idlingAnimCVar != null && idlingAnimCVar.GetBool ());
			
			if (idlinganim)
				return ResolveState ("Ready.IdleAnim");
			else
				return ResolveState ("Ready.NoIdleAnim");
			
			return ResolveState (null);
		}
		Loop;
	Deselect:
		TNT1 AAAAAAAAAAAAAAA 0 A_Lower;
		SLED ABCD 2;
		Loop;
	Ready.IdleAnim:
		POHI ABCDEFGHIJKLMNO 7 A_WeaponReady;
		POHI A 0 A_WeaponReady;
		Goto Ready;
	Ready.NoIdleAnim:
		POHI A 1 A_WeaponReady;
		Goto Ready;
	Select:
		TNT1 AAAAAAAAAAAAAAA 0 A_Raise;
		TNT1 A 0 A_WeaponOffset(0,32); // Fix "bump" when weapon is selected
		TNT1 A 0 A_PlaySound("weaponselect5", 7 | 4096);
		POHS ABCDEF 2 A_WeaponReady;
		Goto Ready;	
	Fire:
		POH2 ABCDEFGHIJKL 3;
		Goto FireHold;
	FireHold:
		POH2 W 3
		{
			if (!(player.cmd.buttons & BT_ATTACK))
				return ResolveState ("FireFinish");
				
			return ResolveState (null);
		}
		Loop;
	FireFinish:
		SHOO AB 2;
		SHOO C 0 A_Punch();
		SHOO CDEF 2;
		Goto Ready;
	AltFire:
		SLES ABC 4;
		Goto AltFireHold;
	AltFireHold:
		SLES C 4
		{
			if (!(player.cmd.buttons & BT_ALTATTACK))
				return ResolveState ("AltFireFinish");
				
			return ResolveState (null);
		}
		Loop;
	AltFireFinish:
		SHO2 ABCDE 3;
		TNT1 A 0
		{
			let p = PostalDude(self);
			p.Player.PendingWeapon = p.PlayerData.HolsterWeapon;
			p.Player.ReadyWeapon = p.PlayerData.HolsterWeapon;
			
			let d = Weapon(FindInventory("PostSledge"));
			RemoveInventory(d);
			
			return;
		}
		Goto Ready;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}