class PostRLauncher : PostalWeapon
{
	Default
	{
		//$Category STD Weapons
		//$Title "Missile Launcher"
		//$Sprite PICKA0
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Clip";
		+WEAPON.NOAUTOFIRE;
		Obituary "Nobody told %o that %k's rocket is lethal. Ouch!";
		Tag "$TAG_SHOTGUN";
		Inventory.PickupMessage "Picked up a Missile Launcher.";
	}
	States
	{
	Ready:
		TNT1 A 1
		{
			cvar idlinganimcvar = cvar.findcvar('postal_idleanim');
			bool idlinganim = (idlingAnimCVar != null && idlingAnimCVar.GetBool ());
			
			if (idlinganim)
				return ResolveState ("Ready.IdleAnim");
			else
				return ResolveState ("Ready.NoIdleAnim");
			
			return ResolveState (null);
		}
	Ready.IdleAnim:
		RLID ABCDEFGHIJKLMNOPQRSTUVWXYZA 4 A_WeaponReady;
		Goto Ready;
	Ready.NoIdleAnim:
		RLID A 1 A_WeaponReady;
		Goto Ready;
	Deselect:
		//TNT1 AAAAAAAAAAAAAAA 0 A_Lower;
		RLDE IIIIIIIIIIIIIIIIIIII 2 A_Lower;
		Loop;
	Select:
		TNT1 AAAAAAAAAAAAAAA 0 A_Raise;
		TNT1 A 0 A_WeaponOffset(0,32); // Fix "bump" when weapon is selected
		TNT1 A 0 A_PlaySound("weaponselect4", 7 | 4096);
		RLSE ABCDEFGHIJKLMNOPQRST 2 A_WeaponReady;
		Loop;
	Fire:
		RLFA A 2 A_WeaponReady;
		RLFA B 2 A_WeaponReady;
		RLFA C 2 A_WeaponReady;
		RLFA D 2 A_WeaponReady;
		RLFA E 2 A_WeaponReady;
		RLFA F 2 A_WeaponReady;
		RLFA G 2 A_WeaponReady;
		RLFA H 2 A_WeaponReady;
		TNT1 A 0 A_ReFire;
		//RLFA BCDEFGH 2;
		RLFA J 1 A_FireProjectile("PostalRocket");
		RLFA KLMNOPQRSTU 2;
		Goto Ready;
	Hold:
		TNT1 A 0 A_PlaySound("weapons/fueling", 7 | 4096);
		RLHA ABCDEFGHJKLM 3;
		RLH2 ABCDEFGHJKLM 3;
		RLH3 ABCDEFGHJKLM 3;
		TNT1 A 0 A_ReFire("Hold2");
		Goto Ready;
	Hold2:
		TNT1 A 0 A_PlaySound("weapons/seeker", 7 | 4096);
		Goto Hold3;
	Hold3:
		RLH3 JKLM 3;
		TNT1 A 0 A_ReFire("Hold3");
		RLFA J 1 A_FireProjectile("SeekerRocket");
		RLFA KLMNOPQRSTU 2;
		Goto Ready;
	Flash:
		//PGNS B 3 Offset(0, 0) Bright A_Light2;
		//PGNS A 2 Offset(0, 0) Bright A_Light1;
		Goto LightDone;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}

//Unused
extend class PostRLauncher
{
	action void A_SeekerMode()
	{
		if (target == null) return;
		AddZ(16);
		Actor missile = SpawnMissile(target, "SeekerRocket");
		AddZ(-16);
		if (missile != null)
		{
			missile.SetOrigin(missile.Vec3Offset(missile.Vel.X, missile.Vel.Y, 0.), false);
			missile.tracer = target;
		}
	}
}

class PostalRocket : Actor
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 10;
		Damage 20;
		Projectile;
		+RANDOMIZE
		+DEHEXPLOSION
		+ROCKETTRAIL
		+ZDOOMTRANS
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
	}
	States
	{
	Spawn:
		MISL A 1 Bright;
		Loop;
	Death:
		MISL B 8 Bright A_Explode;
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

class SeekerRocket : Actor
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 10;
		Damage 20;
		Projectile;
		+RANDOMIZE
		+DEHEXPLOSION
		+ROCKETTRAIL
		+ZDOOMTRANS
		+SEEKERMISSILE
		BounceType "Hexen";
		BounceCount 5;
		BounceSound "weapons/bounce";
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
	}
	States
	{
	Spawn:
		TNT1 A 0 A_SeekerMissile(0,45); //can turn 45 angle at max
		MISL A 1 Bright A_Tracer;
		Loop;
	Death:
		MISL B 8 Bright A_Explode;
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}