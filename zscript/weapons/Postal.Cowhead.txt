class PostCowhead : PostalWeapon
{
	Default
	{
		//$Category STD Weapons
		//$Title "Severed Cowhead"
		//$Sprite PICKA0
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Obituary "$PSTL_OB_COWHEAD";
		Tag "$PSTL_WP_COWHEAD";
		Inventory.PickupMessage "$PSTL_PP_COWHEAD";
		+Weapon.NoAlert;
		PostalWeapon.STD_Projectile true;
	}
	States
	{
	Ready:
		COWI A 0 A_StartSound("cowhead/idle", CHAN_6 | CHANF_LOCAL | CHANF_NOSTOP);
		COWI ABCDEFGHIJKLMNOPQRSTUVWXYZ 5 
		{
			A_WeaponReady();
		}
		Loop;
	Deselect:
		COWD A 0 A_StartSound("other/mute", CHAN_6);
		COWD ABCDEFGHIJKLMNOPQRSTUVWXYZ 2 A_Lower;
		Loop;
	Select:
		COWS A 0 A_PostalRaise(0);
		COWS A 0 A_StartSound("weaponselect1", CHAN_7);
		COWS ABCDEFGHIJKLMNOPQRSTUV 2 A_WeaponReady;
		COWI A 0 A_PostalRaise(1);
		Loop;
	Fire:
		COWF A 0 A_StartSound("other/mute", CHAN_6);
		COWF ABCDE 2;
		COWF F 0 A_StartSound("cowhead/fire", CHAN_WEAPON);
		COWF FGHIJKLMNOP 2;
		COWF Q 0
		{	
			A_SetPitch(pitch-3.50);
			actor cowhead = A_FireProjectile("PostalCowhead",0,1,0,4);
			if (cowhead)
			{
				let cwh = PostalCowhead(cowhead);
				if (cwh)
				{
					cwh.Owner = invoker.owner;
				}
			}
		}
		COWF Q 2;
		COWF R 0
		{
			A_SetPitch(pitch+3.50);
		}
		COWF RSTUVWX 2;
		Goto Reload;
	Reload:
		COWS ABCDEFGHIJKLMNOPQRSTUV 1;
		Goto Ready;
	AltFire:
		COSF A 0 A_StartSound("other/mute", CHAN_6);
		COSF ABCDEFGHIJKLMNOPQRS 3;
		Goto Ready;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}

class PostalCowhead : PostalActor
{
	Actor SavedBouncePos, Owner;
	bool Armed, Minesweeper;
	double nangle;
	
	// Randomization on which side to turn or roll
	bool tr, rr;
	double turn, nroll;
	
	// 1 = passes thru actors
	// 0 = explodes on actors
	// -1 = default
	override int SpecialMissileHit(Actor victim)
	{
		if ((victim is 'PostalWindow' || victim is 'PostalWindow_Extender') && victim)
		{
			int dd = victim.DamageMobj(self, target, 1, "Melee");
			return 1;
		}
		
		if (victim == target)
			return 1;
		
		return -1;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		target = Owner;
		
		nangle = angle + frandom[randomizedangle](-50,50);
		roll = frandom[randomizedroll](-15,15);
		
		// Spawn initially a last bounce spot, obviously just to stop the Grenade to arm immediately
		SavedBouncePos = spawn("PostalGrenadeHelper", pos);
		
		//Console.Printf("X: %f | Y: %f | Z: %f", vel.x, vel.y, vel.z);
		
		tr = random[turnrandom](0,1);
		rr = random[rollrandom](0,1);
		
		turn = frandom[tturn](0.2,0.8);
		nroll = frandom[rroll](0.3,0.10);
		
	}
	
	override void Tick()
	{
		Super.Tick();
		
		// Continously decrease Z velocity
		if (!Armed) 
		{
			if (tr)
				nangle += turn;
			else
				nangle -= turn;
			
			vel.z -= 0.1;
			angle = nangle;
			
			if (rr)
				roll += nroll;
			else
				roll -= nroll;
		}
	}
	
	override void Touch(Actor toucher)
	{
		// stub for now
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{
		// stub for now
		
		return Super.DamageMobj(inflictor,source,damage,mod,flags,angle);
	}
	
	Default
	{
		Species "Cowheadondaground";
		Radius 13;
		Height 15;
		Speed 15;
		Damage 20;
		Projectile;
		Health 15;
		+RANDOMIZE
		+DEHEXPLOSION
		+ROLLSPRITE
		-NOBLOCKMAP
		-NOGRAVITY
		+NOTARGETSWITCH
		+ABSMASKPITCH
		+SHOOTABLE
		+BOUNCEONWALLS
		+BOUNCEONFLOORS
		+BOUNCEONCEILINGS
		+DONTBOUNCEONSKY
		+USEBOUNCESTATE
		+BOUNCEONACTORS
		+ALLOWBOUNCEONACTORS
		+NOBLOOD
		Gravity 0.27;
		BounceFactor 0.66;
		BloodType "null";
		WallBounceFactor 0.66;
		//SeeSound "";
		DeathSound "other/mute";
		//BounceSound "";
		Obituary "$OB_MPROCKET";
		
		PostalActor.NeverTarget true;
		PostalActor.NoKillLine true;
	}
	States
	{
	Spawn:
		COWH A 1;
		Loop;
	Bounce:
		COWH A 0
		{
			if (Armed) return;
			
			angle = nangle;
			
			// If the Distance is far-far from the previous bounce
			// todo: Maybe Distance3D instead?
			if (Distance3D(SavedBouncePos) >= 0.5)
				A_StartSound("cowhead/bounce");
			
			if (Distance3D(SavedBouncePos) >= 0.5)
			{
				// stub
			}
			else
			{
				// Note: There's a non-intended effect adapting this weird solution, firing upwards will make the Grenade instantly be armed
				
				// Distance is too close to previous bounce, Arm the grenade so it will stop making bouncing sounds
				// Also stop the Grenade completely
				vel.xy = (0,0);
				Armed = true;
			}
			
			// Destroys and creates a new actor when it bounced
			// I don't know if there's any other way to do this, but I found this to be the easiest
			if (SavedBouncePos)
			{
				SavedBouncePos.Destroy();
				SavedBouncePos = spawn("PostalGrenadeHelper", pos);
			}
		}
		Goto Spawn;
	Bounce.Wall:
		COWH A 0
		{
			if (rr == true) rr = false;
				else rr = true;
				
			if (tr == true) tr = false;
				else tr = true;
			
			SetStateLabel("Bounce");
		}
		Goto Spawn;
	Death:
		TNT1 A 0;
		TNT1 A 8 Bright;
		TNT1 A 6 Bright;
		TNT1 A 4 Bright;
		Stop;
	}
}