class PostShovel : PostalWeapon
{
	
	action void A_ShovelHit(int xtra)
	{
		FTranslatedLineTarget t;

		int damage = random[shovel](9+xtra, 13+xtra);

		double ang = angle;
		double pitch = AimLineAttack (ang, DEFMELEERANGE, null, 0., ALF_CHECK3D);

		LineAttack (ang, DEFMELEERANGE, pitch, damage, 'Melee', "PostalMeleeHitPuff", LAF_ISMELEEATTACK, t);
		
	}
	
	action void A_ShovelTryHit(string SecondaryOrPrimary)
	{
		FLineTraceData lineData;
		LineTrace(angle,52,pitch,offsetz: height, data: LineData);
		
		if (LineData.HitType == TRACE_HitNone)
		{
			if (SecondaryOrPrimary ~== "primary")
				A_PlaySound("weapons/shovel_pf", CHAN_WEAPON);
			else if (SecondaryOrPrimary ~== "secondary")
				A_PlaySound("weapons/shovel_sf", CHAN_WEAPON);
		}
		
		if (LineData.HitType == TRACE_HitActor)
		{
			if (lineData.hitActor == null) return;
			
			if (lineData.HitActor is 'NPCCore')
			{
				FLineTraceData TraceData;
				LineTrace(invoker.owner.angle,125.0,invoker.owner.pitch,0,Player.ViewHeight-18,0,0,TraceData);
				
				// Headshot
				if (TraceData.HitLocation.Z > pos.z + height-16)
				{
					if (SecondaryOrPrimary ~== "primary")
						A_PlaySound("weapons/shovel_hithead", CHAN_WEAPON);
					else if (SecondaryOrPrimary ~== "secondary")
						A_PlaySound("weapons/shovel_stab", CHAN_WEAPON);
					
					A_ShovelHit(7);
					return;
				}
				
				if (SecondaryOrPrimary ~== "primary")
					A_PlaySound("weapons/shovel_hitbody", CHAN_WEAPON);
				else if (SecondaryOrPrimary ~== "secondary")
					A_PlaySound("weapons/shovel_stab", CHAN_WEAPON);
				
				A_ShovelHit(0);
				return;
			}
			
			if (lineData.HitActor is 'PostalActor' || lineData.HitActor.Health > 0)
			{
				if (SecondaryOrPrimary ~== "primary")
					A_PlaySound("weapons/shovel_hitbody", CHAN_WEAPON);
				else if (SecondaryOrPrimary ~== "secondary")
					A_PlaySound("weapons/shovel_stab", CHAN_WEAPON);
				
				A_ShovelHit(0);
				return;
			}
		}
		
		if (LineData.HitType == TRACE_HitWall || LineData.HitType == TRACE_HitFloor || LineData.HitType == TRACE_HitCeiling)
		{
			A_PlaySound("weapons/shovel_hitwall", 7 | 4096);
			A_ShovelHit(0);
		}
	
	
	}
	
	Default
	{
		//$Category STD Weapons
		//$Title "Shovel"
		//$Sprite PICKA0
		Weapon.Kickback 100;
		Weapon.SelectionOrder 1300;
		Obituary "$PSTL_OB_SHOVEL";
		Tag "$PSTL_WP_SHOVEL";
		Inventory.PickupMessage "$PSTL_PP_SHOVEL";
		+Weapon.NoAlert;
		PostalWeapon.STD_Melee true;
	}
	States
	{
	Ready:
		SHOI ABCDEFGHIJKLMNOPQRSTUVWXA 6 A_WeaponReady;
		Goto Ready;
	Deselect:
		SHOD ABCDEFGHIJKLMNOPQRSTUVWX 1;
		SHOD X 0 A_PostalLower();
		Loop;
	Select:
		SHOS A 0 A_PostalRaise(0);
		SHOS A 0 A_PlaySound("weaponselect1", 7 | 4096);
		SHOS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady;
		SHOI A 0 A_PostalRaise(1);
		Loop;
	Fire:
		SHOA ABC 2;
		SHOA D 0 A_ShovelTryHit("primary");
		SHOA DEFGHIJKLMNOPQRSTUVW 1;
		Goto Ready;
	AltFire:
		SHO2 ABCD 2;
		SHO2 E 0 A_ShovelTryHit("secondary");
		SHO2 EFGHIJKLMNOPQRS 1;
		Goto Ready;
	Spawn:
		TNT1 A 0;
		PICK A -1;
		Stop;
	}
}
