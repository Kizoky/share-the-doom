class PostalKarmaActor : Actor 
{
	string STD_CustomBounceSound, STD_CustomHitSound;
	double STD_Weight;
	
	property CustomBounceSound : STD_CustomBounceSound;
	property CustomHitSound : STD_CustomHitSound;
	property Heaviness : STD_Weight;
	
	override void Tick() 
	{
		Super.Tick();
		
		if (Bouncing)
		{	
			if (vel.xy.Length() <= 0.95)
			{
				let fake = spawn(GetClassName(), pos);
				if (fake)
				{
					fake.angle = angle;
					fake.pitch = pitch;
					fake.roll = roll;
					Destroy();
					return;
				}
			}
			
			int turningvalue = 3;
			
			if (nofirstbounceyet)
			{
				if (leftorright)
				{
					roll += turningvalue;
					pitch -= turningvalue;
				}
				else
				{
					roll -= turningvalue;
					pitch += turningvalue;
				
				}
			}
		}
	}
	
	bool Bouncing, nofirstbounceyet, leftorright;
	Actor SavedBouncePos;
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{	
		if (source && inflictor)
		{
			//todo: check if explosion, but might be worthless to do anyway
			A_StartSound(STD_CustomHitSound);
			
			self.angle = source.angle;
			Bouncing = true;
			nofirstbounceyet = true;
			leftorright = random[ll](0,1);
			A_Recoil(STD_Weight);
			vel.z = 7;
			return Super.DamageMobj(null,null,0,mod,flags,angle);
		}
		
		if (source is 'PostalDude' && inflictor is "PostalKickPuff")
		{
			// Make the angle match to the Player's so the Grenade will not move towards the Player
			// Also thrust it and set it's velocity z simulating a kick
			A_Recoil(STD_Weight*1.5);
			vel.z = 10;
			
			return Super.DamageMobj(null,null,0,mod,flags,angle);
		}
		
		return Super.DamageMobj(inflictor,source,damage,mod,flags,angle);
	}
	
	Default
	{
		Species "PostalKarma";
		Projectile;
		+ROLLSPRITE
		+ABSMASKPITCH
		+ABSMASKANGLE
		+SHOOTABLE
		+BOUNCEONWALLS
		+BOUNCEONFLOORS
		+BOUNCEONCEILINGS
		+DONTBOUNCEONSKY
		+USEBOUNCESTATE
		+THRUSPECIES
		//+THRUACTORS
		//+BOUNCEONACTORS
		//+ALLOWBOUNCEONACTORS
		+NOBLOOD
		Speed 0;
		Damage 0;
		BloodType "null";
		BounceFactor 0.35;
		WallBounceFactor 0.35;
		Health 1000;
		-NOBLOCKMAP
		-NOGRAVITY
		//+NOGRAVITY
		-SOLID
		//+NOINTERACTION
		
		PostalKarmaActor.CustomBounceSound "physics/trashcan";
		PostalKarmaActor.CustomHitSound "none";
		
		// Use negative value to increase lightness
		// To make it heavier use positive value
		PostalKarmaActor.Heaviness -5;
	}
	States
	{
	Bounce:
		PROP A 0
		{
			if (!Bouncing) return ResolveState("Spawn");
			
			double randomroll = random[r](0,1) == 1 ? -5 : 5;
			nofirstbounceyet = false;
			
			roll += randomroll;
			pitch -= randomroll;
			
			A_StartSound(STD_CustomBounceSound);
			
			return ResolveState("Spawn");
		}
	Death:
		TNT1 A 1;
		Stop;
	
	}
	
}

class trashcan1 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Bin 1"
		Radius 10;
		Height 17;
		PostalKarmaActor.Heaviness -15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class trashcan2 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Bin 2"
		Radius 10;
		Height 15;
		PostalKarmaActor.Heaviness -15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class lampshade1 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Lamp 70s"
		Radius 10;
		Height 32;
		PostalKarmaActor.CustomBounceSound "physics/lamp2";	
		PostalKarmaActor.Heaviness -20;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class dirtbag : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Garbage Bag"
		Radius 10;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/trashbag";
		PostalKarmaActor.Heaviness -30;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class trashcan_plasticed : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Plastic Trashcan"
		Radius 10;
		Height 17;
		PostalKarmaActor.Heaviness -8;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class banka_mayoneza : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Mayo Jar"
		Radius 10;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class ogurchiki : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Pickle Jar"
		Radius 10;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class lampshade2 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Tacky 80s Lamp"
		Radius 10;
		Height 22;
		PostalKarmaActor.CustomBounceSound "physics/lamp2";
		PostalKarmaActor.Heaviness -20;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class lavalampo : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Lava Lamp"
		Radius 10;
		Height 25;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -30;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class keyboard_sw : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Keyboard"
		Radius 10;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -30;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class monitorus : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Computer Monitor"
		Radius 10;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -20;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class pctower : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Computer Tower"
		Radius 10;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -20;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class deskpic : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Cat Picture"
		Radius 10;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/wood";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class DinnerChairSmocklar : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Wooden Chair"
		Radius 15;
		Height 25;
		PostalKarmaActor.CustomBounceSound "physics/wood";
		PostalKarmaActor.Heaviness -8;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class bosschair : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Office Chair"
		Radius 15;
		Height 25;
		PostalKarmaActor.CustomBounceSound "physics/wood";
		PostalKarmaActor.Heaviness -8;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class microwave : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Microwave"
		Radius 17;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/metal";
		PostalKarmaActor.Heaviness -15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class Tamxxx : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Tam XXX"
		Radius 10;
		Height 14;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class lungdump : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Lung Dumplings"
		Radius 10;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class pot_timb : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Kitchen Pot"
		Radius 20;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class pan_timb : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Kitchen Pan"
		Radius 20;
		Height 10;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class pot_timb2 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Kitchen Pot 2"
		Radius 16;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/lamp";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class cleaner1 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "''Magic Sparkle'' Box"
		Radius 10;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class cleaner2 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "''Magic Sparkle'' Plastic Bottle"
		Radius 10;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class trashcan3 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Trashcan"
		Radius 15;
		Height 30;
		PostalKarmaActor.Heaviness -15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class SquareBox : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Small Cargo Box"
		Radius 13;
		Height 22;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class redplasticecrate : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Red Plastic Crate"
		Radius 17;
		Height 20;
		PostalKarmaActor.CustomBounceSound "physics/plastice";
		PostalKarmaActor.Heaviness -35;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class trashcan4 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Trashcan Green"
		Radius 10;
		Height 35;
		PostalKarmaActor.Heaviness -15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}