class PostalKarmaActor : Actor 
{
	override void Tick() 
	{
		Super.Tick();
		
		if (Bouncing)
		{	
			if (vel.xy.Length() <= 0.95)
			{
				let fake = spawn(GetClassName(), pos);
				if (fake)
				{
					fake.angle = angle;
					fake.pitch = pitch;
					fake.roll = roll;
					Destroy();
					return;
				}
			}
			
			int turningvalue = 3;
			
			if (nofirstbounceyet)
			{
				if (leftorright)
				{
					roll += turningvalue;
					pitch -= turningvalue;
				}
				else
				{
					roll -= turningvalue;
					pitch += turningvalue;
				
				}
			}
		}
	}
	
	bool Bouncing, nofirstbounceyet, leftorright;
	Actor SavedBouncePos;
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{
		if (source && inflictor)
		{
			self.angle = source.angle;
			Bouncing = true;
			nofirstbounceyet = true;
			leftorright = random[ll](0,1);
			A_Recoil(-5);
			vel.z = 7;
			return Super.DamageMobj(null,null,0,mod,flags,angle);
		}
		
		if (source is 'PostalDude' && inflictor is "PostalKickPuff")
		{
			// Make the angle match to the Player's so the Grenade will not move towards the Player
			// Also thrust it and set it's velocity z simulating a kick
			A_Recoil(-10);
			vel.z = 10;
			
			return Super.DamageMobj(inflictor,source,0,mod,flags,angle);
		}
		
		return Super.DamageMobj(inflictor,source,damage,mod,flags,angle);
	}
	
	Default
	{
		Projectile;
		+ROLLSPRITE
		+ABSMASKPITCH
		+ABSMASKANGLE
		+SHOOTABLE
		+BOUNCEONWALLS
		+BOUNCEONFLOORS
		+BOUNCEONCEILINGS
		+DONTBOUNCEONSKY
		+USEBOUNCESTATE
		//+BOUNCEONACTORS
		//+ALLOWBOUNCEONACTORS
		+NOBLOOD
		Speed 0;
		Damage 0;
		BloodType "null";
		BounceFactor 0.55;
		WallBounceFactor 0.55;
		Health 1000;
		-NOBLOCKMAP
		-NOGRAVITY
		//+NOGRAVITY
		-SOLID
		//+NOINTERACTION
	}
	States
	{
	Bounce:
		PROP A 0
		{
			if (!Bouncing) return ResolveState("Spawn");
			
			double randomroll = random[r](0,1) == 1 ? -5 : 5;
			nofirstbounceyet = false;
			
			roll += randomroll;
			pitch -= randomroll;
			
			A_StartSound("physics/trashcan");
			
			return ResolveState("Spawn");
		}
	Death:
		TNT1 A 1;
		Stop;
	
	}
	
}

class trashcan1 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Bin 1"
		Radius 10;
		Height 17;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}

class trashcan2 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Bin 2"
		Radius 10;
		Height 15;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}



class lampshade1 : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Lamp 70s"
		Radius 10;
		Height 32;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}


class dirtbag : PostalKarmaActor
{
	Default
	{
		//$Category Physics Objects
		//$Title "Garbage Bag"
		Radius 10;
		Height 10;
	}
	States
	{
	Spawn:
		PROP A -1;
		Loop;
	}
}