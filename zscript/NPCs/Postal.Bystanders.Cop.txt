// The core of all Bystanders
// If spawned it will use Postal Dude's models, and Mike J's voice

class NPCCop : NPCCore
{	

	string Cop_WeaponDrop, Cop_Arrest, Cop_SuspectSight, Cop_NoMoreWarnings;
	
	
	override void NPC_Settings()
	{
		//Sounds are defined here for NPCs
		NPC_Scream = "male1/scream";
		NPC_Bump = "male1/bump";
		NPC_PetitionDeny = "noway";
		NPC_Dickout = "male1/dickout";
		
		//Sounds defined for cops
		Cop_SuspectSight = "malecop1/suspect";
		Cop_Arrest = "malecop1/arrest";
		Cop_WeaponDrop = "malecop1/drop";
		
		//Walking styles are randomized, but you can set it manually if wanted
		WalkingStyle = random(1,6);
		
		//Spawn head hitbox
		class<actor> Head = "NPCHead";
		Actor MyHead = spawn(Head, self.pos, ALLOW_REPLACE);
		if (MyHead)
		{
			MyHead.Angle = self.Angle;
			let p = NPCHead(MyHead);
			p.Owner = self;
		}
		
		Hostility = "Cop";
		NPCWeapon = "Pistol";
		
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{
		MyTarget = source;
		target = source;
		
		if (source is 'PostalDude')
		{
			let PlayerDude = PostalDude(source);
			PlayerDude.PunishPoints += 0.3;
			PlayerDude.ResetPunishment();
		
		}
		
		return Super.DamageMobj(inflictor,source,damage,mod,flags,angle);
	}
	
	override void Touch(Actor toucher)
	{
		if (toucher)
		{
			//If we aren't staring, nor we have more than 0 HP, or we aren't hostile atm, do:
			//Checking for 0 HP is needed because we don't want to resurrect dead NPCs into Ghost ones that are unkillable
			if (isAfterTarget != true && health > 0 && isBusy != true)
			{
				//target = toucher;
				// If the target is Postal Dude, do this
				if (toucher is 'PostalDude' && isAfterTarget != true)
				{
					let PlayerDude = PostalDude(toucher);
					if (isAfterTarget == false)
					{
						if (PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostCowhead")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostGrenade")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostMachete")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostM16")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostMolotov")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostNapalmLauncher")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostPistol")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostRLauncher")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostScissors")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostScythe")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostShotgun")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostRifle")) || 
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostUrethra")) ||
						PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostWMD")))
						{
							//Console.Printf("omg lethal weapon");
										//Console.Printf("HE'S GOT A GUN!!!");
										if (Hostility == "Cop")
										{
											target = PlayerDude;
											MyTarget = PlayerDude;
											isAfterTarget = true;
											A_PlaySound(NPC_Taunt,0);
											PlayerDude.PunishPoints += 0.2;
											SetStateLabel("HostileChase");
										}
						}
						else
						{
							target = PlayerDude;
							MyTarget = PlayerDude;
							A_FaceTarget();
							isBusy = true;
							SetStateLabel("Bumping");
						}
					}
				}

				// If our target is another NPCCore, then do the following
				if (toucher is 'NPCCore' && isAfterTarget != true)
				{
						let pp = NPCCore(toucher);
						//If we aren't Hostile or Fleeing, do:
						//Calm, normal wandering/walking
						if (pp.isAfterTarget == false)
						{
							//target = null;
						}
						else
						{
							//Fleeing, running around and screaming like hell
							if (pp.Hostility == "Pussy" && pp.isAfterTarget == true)
							{
								//Console.Printf("STOP RUNNING INTO ME YOU SCREAMING PUSSY");
								A_FaceTarget();
								target = pp;
								isBusy = true;
								SetStateLabel("Bumping");
							}
							else
							{
								//Hostile, attacks the target
								//If we aren't fleeing or Hostile, do:
								if (isAfterTarget != true)
								{
								
									if (pp.Hostility == "Hostile" && pp.isAfterTarget == true)
									{
										//Console.Printf("HE'S GOT A GUN!!!");
										if (Hostility == "Cop")
										{
											target = pp;
											MyTarget = pp;
											isAfterTarget = true;
											A_PlaySound(NPC_Taunt,0);
											SetStateLabel("HostileChase");
										}
									}
								
								}
							}
						}
				}
				
				if (toucher is 'Champ' && isAfterTarget != true)
				{
					SetStateLabel("Spawn");
				}
				
				if (toucher is 'PostalCatInv' && isAfterTarget != true)
				{
					SetStateLabel("Spawn");
				}
				
				if (toucher is 'CowMike' && isAfterTarget != true)
				{			
					if (Hostility == "Cop")
					{
						target = toucher;
						MyTarget = toucher;
						isAfterTarget = true;
						A_PlaySound(NPC_Taunt,0);
						SetStateLabel("HostileChase");
					}
				}
				
			}
			
		}	
	}
	
	action void A_CopThink()
	{
		//many thanks to phantombeta!!
		double fov = 110; // this should be an argument, variable or constant instead, this is just here as an example
		BlockThingsIterator it = BlockThingsIterator.Create (self, 512); // The number here is (possibly roughly) the maximum distance they can see
		Actor unknownentity;
		
		if (invoker.Petitioning == true)
				SetStateLabel("Petitioning");
		
		while (it.Next ()) {
			let next = it.Thing;

			//if (!next.bShootable) // || next.bKilled || next.health < 1)
			//{
			//	continue;
			//}

			
			if (AbsAngle (AngleTo (next), angle) > (fov / 2.)) // Not within FOV
			{
				continue;
			}

			
			if (!CheckSight (next, SF_SeePastShootableLines)) // Not in sight
				continue;

			// Do things with the "next" pointer here
			
						if (invoker.isAfterTarget != true)
						{
							if (next is 'PostalDude' && !(next.bKILLED))
							{
								let PlayerDude = PostalDude(next);
								if (PlayerDude != null && PlayerDude.player.ReadyWeapon != null)
								{
									if (PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostUrethra")))
									{
										//A_PlaySound("grunt/sight",0);
										invoker.isBusy = true;
										invoker.MyTarget = PlayerDude;
										SetStateLabel("DickOut");
										break;
									}
									else
										if (PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostCowhead")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostGrenade")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostMachete")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostM16")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostMolotov")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostNapalmLauncher")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostPistol")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostRLauncher")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostScissors")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostScythe")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostShotgun")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostRifle")) || 
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostUrethra")) ||
										PlayerDude.Player.ReadyWeapon == Weapon(PlayerDude.FindInventory("PostWMD")))
										{
												invoker.isBusy = true;
												invoker.MyTarget = PlayerDude;
												SetStateLabel("StaringWeapon");
												PlayerDude.PunishPoints += 0.3;
												break;
										}
								}
								
								if (PlayerDude.PunishPoints > 0)
								{
									invoker.isBusy = true;
									invoker.MyTarget = PlayerDude;
									SetStateLabel("StaringSuspect");
									PlayerDude.PunishPoints += 0.2;
									break;
								}
								
							}
							
							
							if (next is 'NPCCore' && !(next.bKILLED))
							{
									let pp = NPCCore(next);
									if (pp.Hostility == "Hostile" && pp.isAfterTarget == true)
									{
										//Console.Printf("I see NPCCore");
										//invoker.staringAt = next;
										invoker.isBusy = true;
										invoker.MyTarget = pp;
										target = pp;
										SetStateLabel("StaringNPC");
										break;
									}
							}
							
							if (next is 'NPCCore' && next.bCORPSE)
							{
								let pp = NPCCore(next);
								if (!(invoker.deadpeople[pp.UniqueID] == pp.UniqueID))
								{
									//invoker.staringAt = next;
									invoker.isBusy = true;
									invoker.MyTarget = pp;
									target = pp;
									SetStateLabel("StaringNPC");
									break;
								}
							
							}
							
							
							if (next.bIsMonster && !(next.bKILLED) && !(next is 'NPCCore') && !(next is 'Champ') && !(next is 'PostalCatInv'))
							{
								unknownentity = next;
								
										if (invoker.Hostility == "Hostile")
										{
											invoker.isAfterTarget = true;
											A_PlaySound(invoker.NPC_Taunt,0);
											invoker.MyTarget = unknownentity;
											SetStateLabel("See");
											break;
										}
										else
										{
											if (invoker.Hostility == "Pussy")
											{
												invoker.isAfterTarget = true;
												invoker.MyTarget = unknownentity;
												SetStateLabel("See");
												break;
											}
										}
							}
							
							if (next is 'CowMike')
							{
							
									Actor madcow = next;
									
										if (invoker.Hostility == "Hostile")
										{
											invoker.isAfterTarget = true;
											A_PlaySound(invoker.NPC_Taunt,0);
											invoker.MyTarget = madcow;
											SetStateLabel("See");
											break;
										}
										else
										{
											if (invoker.Hostility == "Pussy")
											{
												invoker.isAfterTarget = true;
												invoker.MyTarget = madcow;
												SetStateLabel("See");
												break;
											}
										}
							
							}
							
						}
						
					A_ClearTarget();
			}
    }
	
	
	Default
	{
		//$Category NPCs
		//$Title "Cop"
		//$Sprite DUDEA0
		Health 150;
		Radius 13;
		Height 65;
		Speed 2.5;
		PainChance 256;
		Monster;
		+INTERPOLATEANGLES
		SeeSound "";
		AttackSound "weapons/pistol";
		PainSound "male1/hurt";
		DeathSound "dudehurt16";
		ActiveSound "";
		Obituary "%o was somehow got killed by a Cop. What, how is that possible??";
		DropItem "None";
		//+NOTARGETSWITCH;
		+SOLID
		+SHOOTABLE
		+DROPOFF
		+PICKUP
		+NOTDMATCH
		-FRIENDLY
		+SLIDESONWALLS
		+CANPASS
		+CANPUSHWALLS
		+FLOORCLIP
		+WINDTHRUST
		+TELESTOMP
		+NOBLOCKMONST
		+SPECIAL
		+FORCEPAIN
		+AVOIDMELEE
		+DOHARMSPECIES
		+HARMFRIENDS
		+QUICKTORETALIATE
		+ALLOWPAIN
		-COUNTKILL
	}
	States
	{
	Petitioning:
		TNT1 A 0
		{
			isBusy = true;
			if (PetitionNumber != 3)
				PetitionNumber++;
				
			A_FaceTarget();
		}
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 A_FaceTarget();
		DUDE ABCDEFGHIJKLMNOP 3 A_FaceTarget();
		TNT1 A 0 A_PlaySound(NPC_PetitionDeny,0);
		PINK ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 A_FaceTarget();
		TNT1 A 0
		{
			//Clear our target, so we won't be going after it
			isBusy = false;
			Petitioning = false;
			A_ClearTarget();
		}
		TNT1 A 0 ACS_Execute(1003,0);
		Goto Spawn;
	Spawn:
		TNT1 A 0
		{
			if (target == null && Hostility == "Cop")
			{
				isAfterTarget = false;
				isBusy = false;
			}
			
		}
		DUDW ABCD 3
		{
			A_Wander(flags: CHF_NORANDOMTURN);
			if (Petitioning == true)
				SetStateLabel("Petitioning");
		}
		DUDW EFGH 3 A_Wander();
		TNT1 A 0 A_CopThink();
		DUDW IJKL 3 A_Wander(flags: CHF_NORANDOMTURN);
		DUDW MNOPQR 3 A_Wander(flags: CHF_NORANDOMTURN);
		Loop;
	See:
		DUDE A 0
		{		
			if (Hostility == "Hostile" && Hostility == "Cop" && isAfterTarget == true)
			{
				Speed = 5;
				SetStateLabel("HostileChase");
				
				A_ConcentratedTarget();
				
			}
		}
	HostileChase:
		TNT1 A 0
		{	
			A_ConcentratedTarget();
			
			if (NPCWeapon == "Pistol")
				SetStateLabel("HostileChase.Pistol");
			if (NPCWeapon == "Shotgun")
				SetStateLabel("HostileChase.Shotgun");
		
		}
	HostileChase.Pistol:
		XXXX ABCDEFGHIJKLMNOPQ 2 A_HostileWalk(1);
		XXXX ABCDEFGHIJKLMNOPQ 2 A_HostileWalk(2);
		Loop;
	HostileChase.Shotgun:
		SHOT ABCDEFGHIJKLMNOPQRSTU 2 A_HostileWalk(1);
		SHOT ABCDEFGHIJKLMNOPQRSTU 2 A_HostileWalk(2);
		Loop;
	Missile:
		TNT1 A 0
		{
			A_ConcentratedTarget();
			
			if (Hostility == "Hostile" && isAfterTarget == true)
			{
				if (NPCWeapon == "Pistol")
					SetStateLabel("Missile.Pistol");
				if (NPCWeapon == "Shotgun")
					SetStateLabel("Missile.Shotgun");
			}
		}
	Missile.Pistol:
		XXXF A 10 A_FaceTarget;
		TNT1 A 0 A_PostalTarget();
		XXXF A 6 A_NPCPistolAttack();
		XXXF A 8;
		TNT1 A 0 A_ConcentratedTarget();
		Goto HostileChase.Pistol;
	Missile.Shotgun:
		SHOF A 10 A_FaceTarget;
		TNT1 A 0 A_PostalTarget();
		SHOF A 6 A_NPCShotgunAttack();
		SHOF A 4;
		TNT1 A 0 A_PlaySound("weapons/shotgr", CHAN_WEAPON);
		SHOF A 6;
		TNT1 A 0 A_ConcentratedTarget();
		Goto HostileChase.Shotgun;
	Pain:
		TNT1 A 0 { isBusy = false; isAfterTarget = true; }
		DUDE A 3 A_Pain;
		Goto See;
	Bumping:
		TNT1 A 0 A_PlaySound(NPC_Bump,0);
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		
		TNT1 A 0
		{
			//Clear our target, so we won't be going after it
			isBusy = false;
			A_ClearTarget();
		}
		Goto Spawn;
	DickOut:
		TNT1 A 0 A_PlaySound(NPC_Dickout,0);
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 2 { target = MyTarget; A_FaceTarget(); }
		
		TNT1 A 0
		{
			//our target is the Player always in this state
			let PlayerDude = PostalDude(target);
			
			//Check if Player's onscreen weapon is Urethra, pretty self explanatory
			if (PlayerDude.Player.ReadyWeapon == PlayerDude.PlayerData.UrethraWeapon)
			{
				isBusy = false;
				A_ClearTarget();
				SetStateLabel("Spawn");
			}
			else
			{
				isBusy = false;
				A_ClearTarget();
			}
			//Although this may never happen (or can if the Player suddenly zipped it's pants), we don't want to make nasty mistakes.
			isBusy = false;
		}
		Goto Spawn;
	StaringWeapon:
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		TNT1 A 0 A_PlaySound(Cop_WeaponDrop, 0);
		//Be hostile, or flee from the frightening Player
		TNT1 A 0 { isAfterTarget = true; }
		Goto See;
	StaringSuspect:
		TNT1 A 0 A_PlaySound(Cop_SuspectSight, 0);
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		//Be hostile, or flee from the frightening Player
		TNT1 A 0 { isAfterTarget = true; }
		Goto See;
	StaringNPC:
		TNT1 A 0 
		{
			let pp = NPCCore(MyTarget);
			
			//If the Unique ID attached to the corpse is the same in our deadpeople array, then forget about it
			//If this is the first time then just assign the element of deadpeople to the corpse's element
			//so the NPC will always ignore it, that is if it's a Hostile-type NPC
			
			if (pp)
			{
			
				if (deadpeople[pp.UniqueID] == pp.UniqueID && Hostility == "Hostile")
				{
					SetStateLabel("Spawn");
				}
				else
				{
					deadpeople[pp.UniqueID] = pp.UniqueID;
					hasSeenCorpse = true;
				}
			}
			
		}
		DUDE ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		TNT1 A 0 
		{
			//Grab the target's variables
			let pp = NPCCore(target);
			//Console.Printf("NPCCore let pp");
			
			//If the NPC's (not target's) Hostility is 0
			if (isBusy == true)
			{
				if (target is 'NPCCore')
				{
				//Console.Printf("Hostility 0 yada yada");
				//If target's Hostility is 2 (Hostile)
				let pp = NPCCore(target);
				if (pp.Hostility == "Hostile")
				{
						let pp = NPCCore(target);
						//Console.Printf("NPCCore is my target");
						//Console.Printf("HE'S GOT A GUN!!!");
										if (Hostility == "Hostile")
										{
											target = pp;
											isBusy = false;
											A_PlaySound(NPC_Taunt,0);
											isAfterTarget = true;
											SetStateLabel("See");
										}
										else
										{
											if (Hostility == "Pussy")
											{
												target = pp;
												isBusy = false;
												isAfterTarget = true;
												SetStateLabel("See");
											}
										}
				}
				}
			}
		}
		Goto See;
	Death:
		TNT1 A 0 A_Scream;
		DUDD ABCDEFGHIJKLMNOPQRSTUVWXYZ 2;
		TNT1 A 0
		{
			if (NPCWeapon == "Pistol")
				A_SpawnItemEx("PostPistol");
			if (NPCWeapon == "Shotgun")
				A_SpawnItemEx("PostShotgun");
		
		}
		TNT1 A 0 A_NoBlocking;
		DUD2 ABCDEFGHIJKLMNOP 2;
		DUD2 P -1;
		Stop;
	Headless.Death:
		TNT1 A 0 A_Scream;
		XYXY ABCDEFGHIJKLMNOPQRSTUVWXYZ 2;
		TNT1 A 0
		{
			if (NPCWeapon == "Pistol")
				A_SpawnItemEx("PostPistol");
			if (NPCWeapon == "Shotgun")
				A_SpawnItemEx("PostShotgun");
		
		}
		TNT1 A 0 A_NoBlocking;
		XYX2 ABCDEFGHIJKLMNOP 2;
		XYX2 P -1;
		Stop;
	XDeath:
		TNT1 A 0 A_Scream;
		DUDD ABCDEFGHIJKLMNOPQRSTUVWXYZ 2;
		TNT1 A 0
		{
			if (NPCWeapon == "Pistol")
				A_SpawnItemEx("PostPistol");
			if (NPCWeapon == "Shotgun")
				A_SpawnItemEx("PostShotgun");
		
		}
		TNT1 A 0 A_NoBlocking;
		DUD2 ABCDEFGHIJKLMNOP 2;
		DUD2 P -1;
		Stop;
	Raise:
		Stop;
	}
}