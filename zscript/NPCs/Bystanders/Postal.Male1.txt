class NPCWhiteDude : NPCCore
{	
	override void NPC_Settings()
	{
		//Sounds are defined here for NPCs
		NPC_Scream = "male1/scream";
		NPC_Bump = "male1/bump";
		NPC_PetitionDeny = "noway";
		NPC_Dickout = "male1/dickout";
		NPC_Taunt = "krotchy/taunt";

		MyVoice = frandom[voicef](0.7,1.2);
		
		// Spawn head hitbox
		// Note: You MUST set a Headbox for the NPC, otherwise they will die instantly
		// Currently this is hardcoded and there's no way you can't not add Hitbox to the NPC
		class<actor> Head = "NPCHead";
		Actor MyHead = spawn(Head, self.pos, ALLOW_REPLACE);
		if (MyHead)
		{
			MyHead.Angle = self.Angle;
			let p = NPCHead(MyHead);
			if (p)
			{
				p.Owner = self;
				HeadHitbox = p;
			}
		}
	
		Hostility = "Pussy";
		NPCWeapon = "Pistol";
	}
	
	Default
	{
		//$Category NPCs
		//$Title "White DudeSSSS"
		//$Sprite DUDEA0
		Health 150;
		Radius 13;
		Height 65;
		Speed 0;
		PainChance 256;
		Monster;
		+INTERPOLATEANGLES
		SeeSound "";
		AttackSound "weapons/pistol";
		PainSound "male1/hurt";
		DeathSound "male1/death";
		ActiveSound "";
		Obituary "%o should report this because this message shouldn't appear: Krotchy Default Obituary";
		DropItem "None";
		//+NOTARGETSWITCH;
		+SOLID
		+SHOOTABLE
		+DROPOFF
		+PICKUP
		+NOTDMATCH
		-FRIENDLY
		+SLIDESONWALLS
		+CANPASS
		+CANPUSHWALLS
		+FLOORCLIP
		+WINDTHRUST
		+TELESTOMP
		+NOBLOCKMONST
		+SPECIAL
		+FORCEPAIN
		+AVOIDMELEE
		+DOHARMSPECIES
		+HARMFRIENDS
		+QUICKTORETALIATE
		+ALLOWPAIN
		-COUNTKILL
	}
	States
	{
	Petitioning:
		TNT1 A 0
		{
			isBusy = true;
			if (PetitionNumber != 3)
				PetitionNumber++;
				
			A_FaceTarget();
		}
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 A_FaceTarget();
		IDLE ABCDEFG 3 A_FaceTarget();
		TNT1 A 0 A_PlaySound(NPC_PetitionDeny,0);
		PINK ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 A_FaceTarget();
		TNT1 A 0
		{
			//Clear our target, so we won't be going after it
			isBusy = false;
			Petitioning = false;
			A_ClearTarget();
		}
		TNT1 A 0 ACS_Execute(1003,0);
		Goto Spawn;
	Debug:
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3
		{
			angle += 35;
		}
		Loop;
	Spawn:
		TNT1 A 0
		{
			if (target == null && Hostility == "Pussy" && Hostility == "Hostile")
			{
				isAfterTarget = false;
				isBusy = false;
			}
			
			if (target != null && Hostility == "Pussy")
			{
				A_PostalTarget();
			}
			
			if (isAfterTarget && hasSeenCorpse && Hostility == "Pussy")
			{
				SetStateLabel("See");
			}
			
		}
		DUDW ABCD 3
		{
			A_Recoil(-0.35);
			A_Wander(flags: CHF_NORANDOMTURN);
			if (Petitioning == true)
				SetStateLabel("Petitioning");
		}
		DUDW EFGH 3
		{
			A_Recoil(-0.35);
			A_Wander();
		}
		TNT1 A 0 A_BystanderThink();
		DUDW IJKL 3
		{
			A_Recoil(-0.35);
			A_Wander(flags: CHF_NORANDOMTURN);
		}
		DUDW MNOPQRSTUVW 3
		{
			A_Recoil(-0.35);
			A_Wander(flags: CHF_NORANDOMTURN);
		}
		Loop;
	See:
		KROC A 0
		{	
			if (Hostility == "Pussy" && isAfterTarget == true)
			{
				bFRIGHTENED = true;
				Speed = 2;
				SetStateLabel("PussyChase");
				
				A_ConcentratedTarget();
				
			}
				
			if (Hostility == "Hostile" && isAfterTarget == true)
			{
				Speed = 1;
				SetStateLabel("HostileChase");
				
				A_ConcentratedTarget();
				
			}
		}
	PussyChase:
		FLEE ABCDEFGHIJ 3
		{
			A_PostalTarget();
			//A_ConcentratedTarget();
			A_Recoil(-0.85);
			A_Chase(null, null, flags: CHF_STOPIFBLOCKED);
		}
		TNT1 A 0 A_PussyScream();
		Loop;
	HostileChase:
		TNT1 A 0
		{	
			A_ConcentratedTarget();
			
			if (NPCWeapon == "Pistol")
				SetStateLabel("HostileChase.Pistol");
			if (NPCWeapon == "Shotgun")
				SetStateLabel("HostileChase.Shotgun");
		
		}
	HostileChase.Pistol:
		XXXX ABCDEFGHIJKLMNOPQ 2 A_HostileWalk(1);
		XXXX ABCDEFGHIJKLMNOPQ 2 A_HostileWalk(2);
		Loop;
	HostileChase.Shotgun:
		SHOT ABCDEFGHIJKLMNOPQRSTU 2 A_HostileWalk(1);
		SHOT ABCDEFGHIJKLMNOPQRSTU 2 A_HostileWalk(2);
		Loop;
	Missile:
		TNT1 A 0
		{
			A_ConcentratedTarget();
			
			if (Hostility == "Hostile" && isAfterTarget == true)
			{
				if (NPCWeapon == "Pistol")
					SetStateLabel("Missile.Pistol");
				if (NPCWeapon == "Shotgun")
					SetStateLabel("Missile.Shotgun");
			}
		}
	Missile.Pistol:
		TNT1 A 0 { vel.xy = (0,0); }
		XXXF A 10 A_FaceTarget;
		TNT1 A 0 A_PostalTarget();
		XXXF A 6 A_NPCPistolAttack();
		XXXF A 8;
		TNT1 A 0 A_ConcentratedTarget();
		Goto HostileChase.Pistol;
	Missile.Shotgun:
		TNT1 A 0 { vel.xy = (0,0); }
		SHOF A 10 A_FaceTarget;
		TNT1 A 0 A_PostalTarget();
		SHOF A 6 A_NPCShotgunAttack();
		SHOF A 4;
		TNT1 A 0 A_PlaySound("weapons/shotgr", CHAN_WEAPON);
		SHOF A 6;
		TNT1 A 0 A_ConcentratedTarget();
		Goto HostileChase.Shotgun;
	Pain:
		TNT1 A 0 { if (gotPissedOn == true) { isAfterTarget = false; SetStateLabel("Debug"); }}
		TNT1 A 0 { isBusy = false; isAfterTarget = true;}
		KROC A 3 A_Pain;
		Goto See;
	Bumping:
		TNT1 A 0 A_PlaySound(NPC_Bump,0);
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		IDLE ABCDEFG 3 { target = MyTarget; A_FaceTarget(); }
		
		TNT1 A 0
		{
			//Clear our target, so we won't be going after it
			isBusy = false;
			A_ClearTarget();
		}
		Goto Spawn;
	DickOut:
		TNT1 A 0 A_PlaySound(NPC_Dickout,0);
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		IDLE ABCDEFG 3 { target = MyTarget; A_FaceTarget(); }
		
		TNT1 A 0
		{
			//our target is the Player always in this state
			let PlayerDude = PostalDude(target);
			
			//Check if Player's onscreen weapon is Urethra, pretty self explanatory
			if (PlayerDude.Player.ReadyWeapon == PlayerDude.PlayerData.UrethraWeapon)
			{
				isBusy = false;
				A_ClearTarget();
				SetStateLabel("Spawn");
			}
			else
			{
				isBusy = false;
				A_ClearTarget();
			}
			//Although this may never happen (or can if the Player suddenly zipped it's pants), we don't want to make nasty mistakes.
			isBusy = false;
		}
		Goto Spawn;
	StaringWeapon:
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		IDLE ABCDEFG 3 { target = MyTarget; A_FaceTarget(); }
		//Be hostile, or flee from the frightening Player
		TNT1 A 0 { isAfterTarget = true; }
		Goto See;
	StaringNPC:
		TNT1 A 0 
		{
			let pp = NPCCore(MyTarget);
			
			//If the Unique ID attached to the corpse is the same in our deadpeople array, then forget about it
			//If this is the first time then just assign the element of deadpeople to the corpse's element
			//so the NPC will always ignore it, that is if it's a Hostile-type NPC
			
			if (pp)
			{
			
				if (deadpeople[pp.UniqueID] == pp.UniqueID && Hostility == "Hostile")
				{
					SetStateLabel("Spawn");
				}
				else
				{
					deadpeople[pp.UniqueID] = pp.UniqueID;
					hasSeenCorpse = true;
				}
			}
			
		}
		KROC ABCDEFGHIJKLMNOPQRSTUVWXYZ 3 { target = MyTarget; A_FaceTarget(); }
		IDLE ABCDEFG 3 { target = MyTarget; A_FaceTarget(); }
		TNT1 A 0 
		{
			//Grab the target's variables
			let pp = NPCCore(target);
			//Console.Printf("NPCCore let pp");
			
			//If the NPC's (not target's) Hostility is 0
			if (isBusy == true)
			{
				if (target is 'NPCCore')
				{
					//Console.Printf("Hostility 0 yada yada");
					//If target's Hostility is 2 (Hostile)
					let pp = NPCCore(target);
					if (pp.Hostility == "Hostile")
					{
							let pp = NPCCore(target);
							//Console.Printf("NPCCore is my target");
							//Console.Printf("HE'S GOT A GUN!!!");
							if (Hostility == "Hostile")
							{
								target = pp;
								isBusy = false;
								A_PlaySound(NPC_Taunt,0);
								isAfterTarget = true;
								SetStateLabel("See");
							}
							else
							{
								if (Hostility == "Pussy")
								{
									target = pp;
									isBusy = false;
									isAfterTarget = true;
									SetStateLabel("See");
								}
							}
					}
				}
			}
		}
		Goto See;
	Death:
		TNT1 A 0 A_Scream;
		DUDD ABCDEFGHIJKLMNOPQRSTUVWXYZ 2;
		TNT1 A 0
		{
			if (NPCWeapon == "Pistol")
				A_SpawnItemEx("PostPistol");
			if (NPCWeapon == "Shotgun")
				A_SpawnItemEx("PostShotgun");
		
		}
		TNT1 A 0 A_NoBlocking;
		DUD2 ABCDEFGHIJKLMNOP 2;
		DUD2 P -1;
		Stop;
	XDeath:
		TNT1 A 0 A_Scream;
		DUDD ABCDEFGHIJKLMNOPQRSTUVWXYZ 2;
		TNT1 A 0
		{
			if (NPCWeapon == "Pistol")
				A_SpawnItemEx("PostPistol");
			if (NPCWeapon == "Shotgun")
				A_SpawnItemEx("PostShotgun");
		
		}
		TNT1 A 0 A_NoBlocking;
		DUD2 ABCDEFGHIJKLMNOP 2;
		DUD2 P -1;
		Stop;
	Raise:
		Stop;
	}
}