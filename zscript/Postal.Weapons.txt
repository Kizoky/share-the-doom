class PostalWeapon : Weapon
{
	override void Touch (Actor toucher)
	{
		if (!(toucher is 'PostalDude')) return;
		
		let player = toucher.player;

		// If a voodoo doll touches something, pretend the real player touched it instead.
		if (player != NULL)
		{
			toucher = player.mo;
		}

		bool localview = toucher.CheckLocalView();

		if (!toucher.CanTouchItem(self))
			return;

		bool res;
		[res, toucher] = CallTryPickup(toucher);
		if (!res) return;

		// This is the only situation when a pickup flash should ever play.
		if (PickupFlash != NULL && !ShouldStay())
		{
			Spawn(PickupFlash, Pos, ALLOW_REPLACE);
		}

		if (!bQuiet)
		{
			PrintPickupMessage(localview, PickupMessage ());

			// Special check so voodoo dolls picking up items cause the
			// real player to make noise.
			if (player != NULL)
			{
				PlayPickupSound (player.mo);
				if (!bNoScreenFlash)
				{
					player.bonuscount = BONUSADD;
				}
			}
			else
			{
				PlayPickupSound (toucher);
			}
		}							

		// [RH] Execute an attached special (if any)
		DoPickupSpecial (toucher);

		if (bCountItem)
		{
			if (player != NULL)
			{
				player.itemcount++;
			}
			level.found_items++;
		}

		if (bCountSecret)
		{
			Actor ac = player != NULL? Actor(player.mo) : toucher;
			ac.GiveSecret(true, true);
		}

		//Added by MC: Check if item taken was the roam destination of any bot
		for (int i = 0; i < MAXPLAYERS; i++)
		{
			if (players[i].Bot != NULL && self == players[i].Bot.dest)
				players[i].Bot.dest = NULL;
		}
	}
	
	action void A_PostalRaise(int setready)
	{
		if (!player)
			return;
		
		if (player.PendingWeapon != WP_NOCHANGE)
		{
			player.mo.DropWeapon();
			return;
		}
		
		if (!player.ReadyWeapon)
			return;
		
		let psp = player.GetPSprite(PSP_WEAPON);
		
		if (setready == 0)
			psp.y = WEAPONTOP;
		
		if (setready == 1)
			psp.SetState(player.ReadyWeapon.GetReadyState());
	}
	
	action void A_PostalLower()
	{
		if (!player)
			return;
		
		if (!player.ReadyWeapon)
		{
			player.mo.BringUpWeapon();
			return;
		}
		
		let psp = player.GetPSprite(PSP_WEAPON);
		if (player.morphTics || (player.cheats & CF_INSTANTWEAPSWITCH))
			psp.y = WEAPONBOTTOM;
		else
			psp.y = WEAPONBOTTOM;
		
		if (psp.y < WEAPONBOTTOM)
			return;
		
		if (player.playerstate == PST_DEAD)
		{
			player.SetPsprite(PSP_FLASH, null);
			psp.SetState(player.ReadyWeapon.FindState('DeadLowered'));
			return;
		}
		
		player.SetPsprite(PSP_FLASH, null);
		player.mo.BringUpWeapon();
	}
	
	override void Tick()
	{
		Super.Tick();
		if (owner != null && owner is 'PostalDude')
		{
			//Always do bobbing
			Owner.player.WeaponState |= WF_WEAPONBOBBING;
			
			//Disable auto aiming no matter what
			bNOAUTOAIM = true;
			
			//Disable knockback on all weapons
			Kickback = 0;
			
		}
	}
	
	Default
	{
		Weapon.BobStyle "Normal";
		Weapon.BobSpeed 1.7;
		Weapon.BobRangeX 1.0;
		Weapon.BobRangeY 1.05;
		Weapon.YAdjust 0;
		Inventory.PickupFlash "";
		Inventory.PickupMessage "Picked up a Postal weapon.";
		+INVENTORY.NOSCREENFLASH
	}
}

extend class PostalWeapon
{
//Sometimes Postal Dude becomes right or left handed, this will fix that
//This will only work on sprites, use negative value on scaling instead
	action void A_FixMirror()
	{
			A_OverlayFlags (1,PSPF_MIRROR,true);
			A_OverlayFlags (1,PSPF_FLIP,true);
			A_OverlayFlags (PSP_FLASH,PSPF_MIRROR,true);
			A_OverlayFlags (PSP_FLASH,PSPF_FLIP,true);
	}
	
}

class PostalBulletPuff : BulletPuff replaces BulletPuff
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALLOWPARTICLES
		+RANDOMIZE
		+DONTSPLASH
		+ZDOOMTRANS
		RenderStyle "Translucent";
		Alpha 0.5;
		VSpeed 1;
		Mass 5;
		SeeSound "missp";
		AttackSound "hitwall";
		ActiveSound "missp";
	}
	States
	{
	Spawn:
		PUFF A 4 Bright;
		PUFF BCD 4;
		Stop;
	}
}
