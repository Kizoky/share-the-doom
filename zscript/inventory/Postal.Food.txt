//Bag of fast food - 10hp
//Slice of pizza - 5hp
//Doughnut - 3hp

class PostalFoodCore : CustomInventory
{
	bool CheatFix;
	
	Default
	{
		+COUNTITEM
		Inventory.MaxAmount 999;
		Inventory.PickupFlash "PickupFlash";
		+INVENTORY.INVBAR 
		+INVENTORY.FANCYPICKUPSOUND
		//Inventory.Icon "pizzainv";
		Inventory.PickupSound "misc/p_pkup";
		//Inventory.PickupMessage "Picked up a slice of pizza.";
	}
	States
	{
	Spawn:
		PROP A 1;
		loop;
	Use:
		TNT1 A 0 A_Food(0);
		stop;
	}
}




class PostalPizzaInv : PostalFoodCore
{
	Default
	{
		Inventory.Icon "pizzainv";
		Inventory.PickupMessage "Picked up a slice of pizza.";
	}
	States
	{
	Spawn:
		PROP A 1;
		loop;
	Use:
		TNT1 A 0 A_Food(5);
		stop;
	}
}

class PostalDoughInv : PostalFoodCore
{
	Default
	{
		Inventory.Icon "doughinv";
		Inventory.PickupMessage "Picked up a doughnut.";
	}
	States
	{
	Spawn:
		PROP A -1;
		stop;
	Use:
		TNT1 A 0 A_Food(3);
		stop;
	}
}

class PostalFoodInv : PostalFoodCore
{
	Default
	{
		Inventory.Icon "foodinv";
		Inventory.PickupMessage "Picked up a bag of fast food.";
	}
	States
	{
	Spawn:
		PROP A -1;
		stop;
	Use:
		TNT1 A 0 A_Food(10);
		stop;
	}
}


extend class PostalFoodCore
{
	action void A_Food(int giveHealth)
	{
		let player = PostalDude(self);
		if (!player) return;
		
		let item = invoker.GetClassName();
		Inventory CurrentAmount = FindInventory(item);
		
		//For whatever reason, the mod will always take 1 inventory item if cheating when it shouldn't when the Player has 100 health
		//This will fix that
		if (invoker.CheatFix != true)
		{
			if (CurrentAmount.Amount == invoker.Default.MaxAmount)
			{
				invoker.MaxAmount = invoker.Default.MaxAmount+1;
				invoker.CheatFix = true;
			}
		}
		
		if (item)
		{
			if (player.Health > 99 && player.Health <= 125)	
				A_GiveInventory(item, 1);
			else
			{
				int newHealth = player.Health+giveHealth;
				
				if (newHealth > 100)
				{
					if (player.Health > 100 && player.Health <= 125)
					{
						A_GiveInventory(item, 1);
					}
					else
					{
						A_PlaySound("player/healthpickup", 1 | 32, 1.0, false, ATTN_NONE);
						A_SetHealth(100);
					}
					
					if (newHealth > 125)
						A_SetHealth(125);
					
				}
				else
				{
					if (player.Health == 125 || player.Health > 125)
						A_GiveInventory(item, 1);
					else
					{
						A_PlaySound("player/healthpickup", 1 | 32, 1.0, false, ATTN_NONE);
						A_SetHealth(newHealth);
					}
				}
			}
		
		}
		
	}
}
