class PostalDoggieTreat : CustomInventory
{
	bool CheatFix;
	
	Default
	{
		+COUNTITEM
		Inventory.MaxAmount 99;
		Inventory.PickupFlash "PickupFlash";
		+INVENTORY.INVBAR 
		+INVENTORY.FANCYPICKUPSOUND
		Inventory.Icon "doginv";
		Inventory.PickupSound "misc/p_pkup";
		Inventory.PickupMessage "Picked up some Doggie treats.";
	}
	States
	{
	Spawn:
		POSS A -1;
		stop;
	Use:
		TNT1 A 0 A_StupidPlayerEatsIt();
		stop;
	}
}

extend class PostalDoggieTreat
{
	action void A_StupidPlayerEatsIt()
	{
		let player = PostalDude(self);
		let item = invoker.GetClassName();
		Inventory CurrentAmount = FindInventory(item);
		
		//For whatever reason, the mod will always take 1 inventory item if cheating when it shouldn't when the Player has 100 health
		//This will fix that
		if (invoker.CheatFix != true)
		{
			if (CurrentAmount.Amount == invoker.Default.MaxAmount)
			{
				invoker.MaxAmount = invoker.Default.MaxAmount+1;
				invoker.CheatFix = true;
			}
		}
		
		//todo: finish
				int newHealth = player.Health+1;
				
				if (newHealth > 100)
				{
					if (player.Health > 100 && player.Health <= 125)
					{
						//A_GiveInventory(item, 1);
					}
					else
					{
						//A_PlaySound("player/healthpickup", 1 | 32, 1.0, false, ATTN_NONE);
						A_SetHealth(100);
					}
					
					if (newHealth > 125)
						A_SetHealth(125);
					
				}
				else
				{
					if (player.Health == 125 || player.Health > 125)
					{
						//A_GiveInventory(item, 1);
					}
					else
					{
						//A_PlaySound("player/healthpickup", 1 | 32, 1.0, false, ATTN_NONE);
						A_SetHealth(newHealth);
					}
				}
	}
	
	
}